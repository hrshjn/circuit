name: Nightly crawl & doc refresh

on:
  schedule:
    # 22:00 IST / 16:30 UTC every day
    - cron: '30 16 * * *'
  workflow_dispatch:        # manual run button
  pull_request:

jobs:
  crawl-and-docs:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NODE_OPTIONS: '--max_old_space_size=4096'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node + pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install deps (incl. native build for better-sqlite3)
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run crawler
        run: |
          pnpm crawl https://razorpay.com --graph --depth=4
          pnpm crawl https://example.com      # add more target URLs as needed

      - name: Regenerate docs for all flows
        run: pnpm docs:regen

      - name: Commit changes
        run: |
          git config user.name  "automation-bot"
          git config user.email "actions@users.noreply.github.com"
          git add docs/ flows.sqlite traces/
          git diff --cached --quiet || git commit -m "chore: nightly doc refresh ($(date -u +'%Y-%m-%d'))"

      - name: Push to bot branch
        run: |
          git push -f origin HEAD:nightly-doc-refresh

      - name: Create or update PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}
          branch: nightly-doc-refresh
          title: "Nightly automated doc refresh"
          body: "This PR contains updated screenshots/DOM hashes and regenerated Markdown docs."
          commit-message: "chore: nightly doc refresh"
          draft: false

  visual-regression:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: pnpm/action-setup@v2
        with: { version: 8 }
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: pnpm }

      - name: Install deps
        run: pnpm install --frozen-lockfile --prefer-offline
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run visual tests
        run: pnpm test tests/visual.spec.ts

  docs-refresh:
    if: ${{ github.event_name == 'pull_request' && needs.visual-regression.result == 'success' }}
    runs-on: ubuntu-latest
    needs: visual-regression

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: pnpm/action-setup@v2
        with: { version: 8 }
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: pnpm }

      - run: pnpm install --frozen-lockfile --prefer-offline

      - name: Regenerate docs only for changed traces
        run: pnpm docs:regen:changed

      - name: Commit & push if docs changed
        run: |
          git config user.name  "automation-bot"
          git config user.email "actions@users.noreply.github.com"
          git add docs/
          git diff --cached --quiet || git commit -m "chore: auto-regen docs after visual update"
          git push 